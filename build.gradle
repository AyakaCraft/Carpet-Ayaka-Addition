plugins {
    id("fabric-loom") version("1.10-SNAPSHOT") apply(false)

    // https://github.com/ReplayMod/preprocessor
    // https://github.com/Fallen-Breath/preprocessor
    id("com.replaymod.preprocess") version("9d21b334a7")

    id("com.github.johnrengelman.shadow") version("8.1.1") apply(false)

    id("com.modrinth.minotaur") version("2.8.7") apply(false)
    //id("com.matthewprenger.cursegradle") version("1.4.0") apply(false)
}

version = project.mod_version
group = project.maven_group

preprocess {
    strictExtraMappings.set(false)

    var mc11605 = createNode("1.16.5", 1_16_05, "")
    var mc11701 = createNode("1.17.1", 1_17_01, "")
    var mc11802 = createNode("1.18.2", 1_18_02, "")
    var mc11904 = createNode("1.19.4", 1_19_04, "")
    var mc12001 = createNode("1.20.1", 1_20_01, "")
    var mc12006 = createNode("1.20.6", 1_20_06, "")

    mc12006.link(mc12001, file("versions/mapping_12006_12001.txt"))
    mc12001.link(mc11904, file("versions/mapping_12001_11904.txt"))
    mc11904.link(mc11802, file("versions/mapping_11904_11802.txt"))
    mc11802.link(mc11701, file("versions/mapping_11802_11701.txt"))
    mc11701.link(mc11605, file("versions/mapping_11701_11605.txt"))
}

tasks.register("buildAndGather") {
    subprojects {
        dependsOn(it.tasks.named("build").get())
    }
    doFirst {
        println("Gathering builds")

        var buildLibs = { p -> p.buildDir.toPath().resolve("libs") }
        delete(fileTree(buildLibs(rootProject)) { include("*") })
        subprojects {
            var p = it
            copy {
                from(buildLibs(p)) {
                    include("*.jar")
                    exclude("*-dev.jar", "*-sources.jar", "*-shadow.jar")
                }
                into(buildLibs(rootProject))
                duplicatesStrategy = DuplicatesStrategy.INCLUDE
            }
        }
    }
}

tasks.register("publish") {
    mustRunAfter(rootProject.tasks.named("buildAndGather").get())
    subprojects { dependsOn(it.tasks.named("modrinth").get(), it.tasks.named("curseforge").get()) }
}
